<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets">

<h:head>
	<h:outputStylesheet library="css" name="bootstrap.min.css" />
	<script src="https://code.jquery.com/jquery-3.2.1.min.js" />
	<script
		src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-treeview/1.2.0/bootstrap-treeview.min.js" />
	<link rel="stylesheet"
		href="https://cdnjs.cloudflare.com/ajax/libs/typicons/2.0.7/typicons.min.css" />

</h:head>

<h:body>
	<ui:composition>

		<div id="tree" />

		<h:outputScript library="js" name="js.js" />

		<script>
		function getTree(data) {
			var tree = [#{
				category.categories
			}][0]['nodes'];
			removeEmptyNodes(tree, 'nodes');
			$('#tree').treeview({
				data: tree,
				collapseIcon: 'typcn typcn-minus',
				expandIcon: 'typcn typcn-plus',
				backColor: "#c6ffc9",
				borderColor: "#111111",
				searchResultColor: "#111111",
				onNodeSelected: function(event, data) {
					document.getElementById("form-body:nameInput").value = data['text'];
					document.getElementById("form-body:comment").value = data['description'];
					document.getElementById("form-body:hiddenParentId").value = data['parentID'];
					document.getElementById("form-body:hiddenId").value = data['id'];
					createBreadcrumb(data);
				}
			});
			$('#tree').treeview('collapseAll', {
				silent: true
			});
		}

		function search() {
			var searchValue = document.getElementById("searchField").value;
			var nodes = $('#tree').treeview('search', [searchValue, {
				ignoreCase: true,
				exactMatch: false,
			}]);
			if (nodes.length !== 0) {
				selectNode(nodes[0]['nodeId']);
				document.getElementById("form-body:hiddenId").value = nodes[0]['id'];	
				document.getElementById("form-body:nameInput").value =  nodes[0]['text'];
				document.getElementById("form-body:comment").value =  nodes[0]['description'];
				document.getElementById("form-body:hiddenParentId").value = nodes[0]['parentID'];
			}
			
		}
		

		function getBreadcrumb(node) {
			
			var parent;
			var breadcrumb = [];
			
			breadcrumb.push(node);
			
			do {
				parent = getParent(node);
				node = jQuery.extend(true, {}, parent);
				breadcrumb.push(node);
			}
			while (node['nodeId'] !== undefined);
			
			breadcrumb.pop();
			return breadcrumb;
		}
		
	
		function getParent(child) {

			if (child !== undefined) {
				return $('#tree').treeview('getParent', child);
			}
		}

		function selectNode(nodeId) {
			
			var node = $('#tree').treeview('getNode', nodeId);
			
			$('#tree').treeview('selectNode', [node, {
				silent: true
			}]);

			createBreadcrumb(node);
			document.getElementById('form-body:hiddenId').value = node['id'];
		}


		$(document).ready(getTree());

		function removeEmptyNodes(tree, nodes) {
			for (i in tree) {
				if (tree[i][nodes] !== undefined) {
					var children = tree[i][nodes];
					if (children.length === 0) {
						delete tree[i][nodes];
					}
					removeEmptyNodes(tree[i][nodes], nodes);
				}
			}
		}
		</script>
	</ui:composition>
</h:body>

</html>
